[[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;Some 'a';Some 'p'; Some 'p'; Some 'l'; Some 'e';None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None];
[None;None;None;None;None;None;None;None;None;None;None;None;None;None;None]]

['a'; 'b'; 'c'; 'd'; 'e'; 'f'; 'g'; 'h'; 'i'; 'j'; 'k'; 'l'; 'm'; 'n'; 'o'; 'p'; 'q'; 'r'; 's'; 't'; 'u'; 'v'; 'w'; 'x'; 'y'; 'z']
5,8

build' (4,4) state player (find_slots board |> get_anchors board t) ((4,4), true) Left;;

Here are the resulting boards from the command:
    build' (5,9) state player anchors ((5,9), true) Right;;

apple becomes applets
apple becomes applet
apple becomes apples

let t = ['t'; 's'];;

let state = {
Game.name = "a";
grid = board;
players = [];
remaining_tiles = [];
turn = 0;
};;

let player = {
Game.player_name = "a";
tiles = t;
score = 0;
order = 0;
ai = true;
};;

let anchors = find_slots board |> get_anchors board t;;
